var express = require('express');
var bodyParser = require('body-parser');
var app = express();
var fs = require("fs");

app.use(bodyParser.json({}));

app.use(function(req, res, next) {
   res.header("Access-Control-Allow-Origin", "*");
   res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');
   res.header("Access-Control-Allow-Headers", "X-Requested-With,Content-Type,Cache-Control");
   if (req.method === 'OPTIONS') {
    res.statusCode = 204;
    return res.end();
  } else {
    return next();
  }
});


app.get('/getUsers', function (req, res) {
   fs.readFile("user1.json", 'utf8', function (err, data) {
     if (err)
      console.log(err);
     else
     {
       res.end( data );
     }
   });
})

app.get('/deleteUser/:id', function (req, res) {
   // First read existing users.
   fs.readFile("user1.json", 'utf8', function (err, data) {
		data = JSON.parse( data );
		var allUsers = data.user;
		var prop = "id";
		var val = req.params.id;		
		var userIndex, found=false;
		for(userIndex in allUsers) {
			if(allUsers[userIndex][prop] == val) {
				found=true;
				break;
			}
		}
		if(found){
			allUsers.splice(userIndex,1);
			data.user = allUsers;
		}
		
        fs.writeFile("user1.json", JSON.stringify(data), function(err) {
          if(err) {
              return console.log(err);
          }
        });
        res.end( JSON.stringify(data));
   });  
})



app.post('/addUser',function(req,res){
	var newUser = req.body;
	var userId = newUser.id;
	fs.readFile("user1.json", 'utf8', function (err, data) {
		data = JSON.parse( data );
		var allUsers = data.user;
		var totalUsers = allUsers.length;
		var lastUserId = allUsers[totalUsers - 1].id;
		if(userId == lastUserId){
			allUsers[totalUsers] = newUser;			
		}
		else{
			newUser.id = parseInt(lastUserId) + 1;
			allUsers[totalUsers] = newUser;
		}
		data.user = allUsers;
		fs.writeFile("user1.json", JSON.stringify(data), function(err) {
			if(err) {
				return console.log(err);
			}
        });
		res.end( JSON.stringify(data));
	})
})


	var server = app.listen(3000,  function () {
	var host = server.address().address;
	var port = server.address().port;
	console.log("Example app listening at http://localhost", host, port);
})